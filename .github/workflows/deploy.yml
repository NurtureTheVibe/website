name: Deploy Zola to Azure SWA (OIDC)

on:
  push:
    branches: [main]
    paths-ignore:
      - 'infra/**'
      - '.github/workflows/infra.yml'

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_SWA_DEPLOYMENT_TOKEN: ${{ secrets.AZ_SWA_DEPLOYMENT_TOKEN }}
      AZURE_RESOURCE_GROUP:       rg-static-vibe
      AZURE_SWA_NAME:             swapp-vibe-ntv-ooga

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # Set up Zola
      - name: Install Zola
        uses: taiki-e/install-action@v2
        with:
          tool: zola

      # Build Zola site
      - name: Build site
        working-directory: site
        run: zola build

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install image tools
        run: |
          sudo apt-get update && sudo apt-get install -y graphicsmagick
          npm install -g sharp-cli

      - name: Conditional Resize & Convert to WebP
        working-directory: site/public
        run: |
          find . \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png' \) -type f | while read -r img; do
            width=$(gm identify -format "%w" "$img")
            if [ "$width" -gt 1200 ]; then
              echo "Resizing $img from ${width}px to 1200px width"
              sharp -i "$img" -o "${img%.*}.webp" -f webp resize 1200 --optimize
              sharp -i "$img" -o "$img" resize 1200 --optimize
            else
              echo "Skipping resize for $img (${width}px), converting directly to webp"
              sharp -i "$img" -o "${img%.*}.webp" -f webp --optimize
              sharp -i "$img" -o "$img" --optimize
            fi
          done

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.AZURE_SWA_DEPLOYMENT_TOKEN }}
          action: "upload"
          app_location: "site/public"
          skip_app_build: true
          swa_name: ${{ env.AZURE_SWA_NAME }}
          resource_group: ${{ env.AZURE_RESOURCE_GROUP }}
